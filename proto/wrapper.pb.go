// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wrapper.proto

package ictBridge

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WrapperMessage_MessageType int32

const (
	WrapperMessage_FIND_TRANSACTIONS_BY_ADDRESS_REQUEST  WrapperMessage_MessageType = 0
	WrapperMessage_FIND_TRANSACTIONS_BY_TAG_REQUEST      WrapperMessage_MessageType = 1
	WrapperMessage_FIND_TRANSACTION_BY_HASH_REQUEST      WrapperMessage_MessageType = 2
	WrapperMessage_SUBMIT_TRANSACTION_BUILDER_REQUEST    WrapperMessage_MessageType = 3
	WrapperMessage_SUBMIT_TRANSACTION_BYTES_REQUEST      WrapperMessage_MessageType = 4
	WrapperMessage_ADD_EFFECT_LISTENER_REQUEST           WrapperMessage_MessageType = 5
	WrapperMessage_REMOVE_EFFECT_LISTENER_REQUEST        WrapperMessage_MessageType = 6
	WrapperMessage_SUBMIT_EFFECT_REQUEST                 WrapperMessage_MessageType = 7
	WrapperMessage_POLL_EFFECT_REQUEST                   WrapperMessage_MessageType = 8
	WrapperMessage_TAKE_EFFECT_REQUEST                   WrapperMessage_MessageType = 9
	WrapperMessage_FIND_TRANSACTIONS_BY_ADDRESS_RESPONSE WrapperMessage_MessageType = 10
	WrapperMessage_FIND_TRANSACTIONS_BY_TAG_RESPONSE     WrapperMessage_MessageType = 11
	WrapperMessage_FIND_TRANSACTION_BY_HASH_RESPONSE     WrapperMessage_MessageType = 12
	WrapperMessage_POLL_EFFECT_RESPONSE                  WrapperMessage_MessageType = 13
	WrapperMessage_TAKE_EFFECT_RESPONSE                  WrapperMessage_MessageType = 14
)

var WrapperMessage_MessageType_name = map[int32]string{
	0:  "FIND_TRANSACTIONS_BY_ADDRESS_REQUEST",
	1:  "FIND_TRANSACTIONS_BY_TAG_REQUEST",
	2:  "FIND_TRANSACTION_BY_HASH_REQUEST",
	3:  "SUBMIT_TRANSACTION_BUILDER_REQUEST",
	4:  "SUBMIT_TRANSACTION_BYTES_REQUEST",
	5:  "ADD_EFFECT_LISTENER_REQUEST",
	6:  "REMOVE_EFFECT_LISTENER_REQUEST",
	7:  "SUBMIT_EFFECT_REQUEST",
	8:  "POLL_EFFECT_REQUEST",
	9:  "TAKE_EFFECT_REQUEST",
	10: "FIND_TRANSACTIONS_BY_ADDRESS_RESPONSE",
	11: "FIND_TRANSACTIONS_BY_TAG_RESPONSE",
	12: "FIND_TRANSACTION_BY_HASH_RESPONSE",
	13: "POLL_EFFECT_RESPONSE",
	14: "TAKE_EFFECT_RESPONSE",
}

var WrapperMessage_MessageType_value = map[string]int32{
	"FIND_TRANSACTIONS_BY_ADDRESS_REQUEST":  0,
	"FIND_TRANSACTIONS_BY_TAG_REQUEST":      1,
	"FIND_TRANSACTION_BY_HASH_REQUEST":      2,
	"SUBMIT_TRANSACTION_BUILDER_REQUEST":    3,
	"SUBMIT_TRANSACTION_BYTES_REQUEST":      4,
	"ADD_EFFECT_LISTENER_REQUEST":           5,
	"REMOVE_EFFECT_LISTENER_REQUEST":        6,
	"SUBMIT_EFFECT_REQUEST":                 7,
	"POLL_EFFECT_REQUEST":                   8,
	"TAKE_EFFECT_REQUEST":                   9,
	"FIND_TRANSACTIONS_BY_ADDRESS_RESPONSE": 10,
	"FIND_TRANSACTIONS_BY_TAG_RESPONSE":     11,
	"FIND_TRANSACTION_BY_HASH_RESPONSE":     12,
	"POLL_EFFECT_RESPONSE":                  13,
	"TAKE_EFFECT_RESPONSE":                  14,
}

func (x WrapperMessage_MessageType) String() string {
	return proto.EnumName(WrapperMessage_MessageType_name, int32(x))
}

func (WrapperMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7c170ee080c90dfc, []int{0, 0}
}

type WrapperMessage struct {
	MessageType WrapperMessage_MessageType `protobuf:"varint,1,opt,name=messageType,proto3,enum=WrapperMessage_MessageType" json:"messageType,omitempty"`
	// Types that are valid to be assigned to Msg:
	//	*WrapperMessage_FindTransactionsByAddressRequest
	//	*WrapperMessage_FindTransactionsByTagRequest
	//	*WrapperMessage_FindTransactionByHashRequest
	//	*WrapperMessage_SubmitTransactionBuilderRequest
	//	*WrapperMessage_SubmitTransactionBytesRequest
	//	*WrapperMessage_AddEffectListenerRequest
	//	*WrapperMessage_RemoveEffectListenerRequest
	//	*WrapperMessage_SubmitEffectRequest
	//	*WrapperMessage_PollEffectRequest
	//	*WrapperMessage_TakeEffectRequest
	//	*WrapperMessage_FindTransactionsByAddressResponse
	//	*WrapperMessage_FindTransactionsByTagResponse
	//	*WrapperMessage_FindTransactionByHashResponse
	//	*WrapperMessage_PollEffectResponse
	//	*WrapperMessage_TakeEffectResponse
	Msg                  isWrapperMessage_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WrapperMessage) Reset()         { *m = WrapperMessage{} }
func (m *WrapperMessage) String() string { return proto.CompactTextString(m) }
func (*WrapperMessage) ProtoMessage()    {}
func (*WrapperMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c170ee080c90dfc, []int{0}
}

func (m *WrapperMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WrapperMessage.Unmarshal(m, b)
}
func (m *WrapperMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WrapperMessage.Marshal(b, m, deterministic)
}
func (m *WrapperMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WrapperMessage.Merge(m, src)
}
func (m *WrapperMessage) XXX_Size() int {
	return xxx_messageInfo_WrapperMessage.Size(m)
}
func (m *WrapperMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_WrapperMessage.DiscardUnknown(m)
}

var xxx_messageInfo_WrapperMessage proto.InternalMessageInfo

func (m *WrapperMessage) GetMessageType() WrapperMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return WrapperMessage_FIND_TRANSACTIONS_BY_ADDRESS_REQUEST
}

type isWrapperMessage_Msg interface {
	isWrapperMessage_Msg()
}

type WrapperMessage_FindTransactionsByAddressRequest struct {
	FindTransactionsByAddressRequest *FindTransactionsByAddressRequest `protobuf:"bytes,2,opt,name=findTransactionsByAddressRequest,proto3,oneof"`
}

type WrapperMessage_FindTransactionsByTagRequest struct {
	FindTransactionsByTagRequest *FindTransactionsByTagRequest `protobuf:"bytes,3,opt,name=findTransactionsByTagRequest,proto3,oneof"`
}

type WrapperMessage_FindTransactionByHashRequest struct {
	FindTransactionByHashRequest *FindTransactionByHashRequest `protobuf:"bytes,4,opt,name=findTransactionByHashRequest,proto3,oneof"`
}

type WrapperMessage_SubmitTransactionBuilderRequest struct {
	SubmitTransactionBuilderRequest *SubmitTransactionBuilderRequest `protobuf:"bytes,5,opt,name=submitTransactionBuilderRequest,proto3,oneof"`
}

type WrapperMessage_SubmitTransactionBytesRequest struct {
	SubmitTransactionBytesRequest *SubmitTransactionBytesRequest `protobuf:"bytes,6,opt,name=submitTransactionBytesRequest,proto3,oneof"`
}

type WrapperMessage_AddEffectListenerRequest struct {
	AddEffectListenerRequest *AddEffectListenerRequest `protobuf:"bytes,7,opt,name=addEffectListenerRequest,proto3,oneof"`
}

type WrapperMessage_RemoveEffectListenerRequest struct {
	RemoveEffectListenerRequest *RemoveEffectListenerRequest `protobuf:"bytes,8,opt,name=removeEffectListenerRequest,proto3,oneof"`
}

type WrapperMessage_SubmitEffectRequest struct {
	SubmitEffectRequest *SubmitEffectRequest `protobuf:"bytes,9,opt,name=submitEffectRequest,proto3,oneof"`
}

type WrapperMessage_PollEffectRequest struct {
	PollEffectRequest *PollEffectRequest `protobuf:"bytes,10,opt,name=pollEffectRequest,proto3,oneof"`
}

type WrapperMessage_TakeEffectRequest struct {
	TakeEffectRequest *TakeEffectRequest `protobuf:"bytes,11,opt,name=takeEffectRequest,proto3,oneof"`
}

type WrapperMessage_FindTransactionsByAddressResponse struct {
	FindTransactionsByAddressResponse *FindTransactionsByAddressResponse `protobuf:"bytes,12,opt,name=findTransactionsByAddressResponse,proto3,oneof"`
}

type WrapperMessage_FindTransactionsByTagResponse struct {
	FindTransactionsByTagResponse *FindTransactionsByTagResponse `protobuf:"bytes,13,opt,name=findTransactionsByTagResponse,proto3,oneof"`
}

type WrapperMessage_FindTransactionByHashResponse struct {
	FindTransactionByHashResponse *FindTransactionByHashResponse `protobuf:"bytes,14,opt,name=findTransactionByHashResponse,proto3,oneof"`
}

type WrapperMessage_PollEffectResponse struct {
	PollEffectResponse *PollEffectResponse `protobuf:"bytes,15,opt,name=pollEffectResponse,proto3,oneof"`
}

type WrapperMessage_TakeEffectResponse struct {
	TakeEffectResponse *TakeEffectResponse `protobuf:"bytes,16,opt,name=takeEffectResponse,proto3,oneof"`
}

func (*WrapperMessage_FindTransactionsByAddressRequest) isWrapperMessage_Msg() {}

func (*WrapperMessage_FindTransactionsByTagRequest) isWrapperMessage_Msg() {}

func (*WrapperMessage_FindTransactionByHashRequest) isWrapperMessage_Msg() {}

func (*WrapperMessage_SubmitTransactionBuilderRequest) isWrapperMessage_Msg() {}

func (*WrapperMessage_SubmitTransactionBytesRequest) isWrapperMessage_Msg() {}

func (*WrapperMessage_AddEffectListenerRequest) isWrapperMessage_Msg() {}

func (*WrapperMessage_RemoveEffectListenerRequest) isWrapperMessage_Msg() {}

func (*WrapperMessage_SubmitEffectRequest) isWrapperMessage_Msg() {}

func (*WrapperMessage_PollEffectRequest) isWrapperMessage_Msg() {}

func (*WrapperMessage_TakeEffectRequest) isWrapperMessage_Msg() {}

func (*WrapperMessage_FindTransactionsByAddressResponse) isWrapperMessage_Msg() {}

func (*WrapperMessage_FindTransactionsByTagResponse) isWrapperMessage_Msg() {}

func (*WrapperMessage_FindTransactionByHashResponse) isWrapperMessage_Msg() {}

func (*WrapperMessage_PollEffectResponse) isWrapperMessage_Msg() {}

func (*WrapperMessage_TakeEffectResponse) isWrapperMessage_Msg() {}

func (m *WrapperMessage) GetMsg() isWrapperMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *WrapperMessage) GetFindTransactionsByAddressRequest() *FindTransactionsByAddressRequest {
	if x, ok := m.GetMsg().(*WrapperMessage_FindTransactionsByAddressRequest); ok {
		return x.FindTransactionsByAddressRequest
	}
	return nil
}

func (m *WrapperMessage) GetFindTransactionsByTagRequest() *FindTransactionsByTagRequest {
	if x, ok := m.GetMsg().(*WrapperMessage_FindTransactionsByTagRequest); ok {
		return x.FindTransactionsByTagRequest
	}
	return nil
}

func (m *WrapperMessage) GetFindTransactionByHashRequest() *FindTransactionByHashRequest {
	if x, ok := m.GetMsg().(*WrapperMessage_FindTransactionByHashRequest); ok {
		return x.FindTransactionByHashRequest
	}
	return nil
}

func (m *WrapperMessage) GetSubmitTransactionBuilderRequest() *SubmitTransactionBuilderRequest {
	if x, ok := m.GetMsg().(*WrapperMessage_SubmitTransactionBuilderRequest); ok {
		return x.SubmitTransactionBuilderRequest
	}
	return nil
}

func (m *WrapperMessage) GetSubmitTransactionBytesRequest() *SubmitTransactionBytesRequest {
	if x, ok := m.GetMsg().(*WrapperMessage_SubmitTransactionBytesRequest); ok {
		return x.SubmitTransactionBytesRequest
	}
	return nil
}

func (m *WrapperMessage) GetAddEffectListenerRequest() *AddEffectListenerRequest {
	if x, ok := m.GetMsg().(*WrapperMessage_AddEffectListenerRequest); ok {
		return x.AddEffectListenerRequest
	}
	return nil
}

func (m *WrapperMessage) GetRemoveEffectListenerRequest() *RemoveEffectListenerRequest {
	if x, ok := m.GetMsg().(*WrapperMessage_RemoveEffectListenerRequest); ok {
		return x.RemoveEffectListenerRequest
	}
	return nil
}

func (m *WrapperMessage) GetSubmitEffectRequest() *SubmitEffectRequest {
	if x, ok := m.GetMsg().(*WrapperMessage_SubmitEffectRequest); ok {
		return x.SubmitEffectRequest
	}
	return nil
}

func (m *WrapperMessage) GetPollEffectRequest() *PollEffectRequest {
	if x, ok := m.GetMsg().(*WrapperMessage_PollEffectRequest); ok {
		return x.PollEffectRequest
	}
	return nil
}

func (m *WrapperMessage) GetTakeEffectRequest() *TakeEffectRequest {
	if x, ok := m.GetMsg().(*WrapperMessage_TakeEffectRequest); ok {
		return x.TakeEffectRequest
	}
	return nil
}

func (m *WrapperMessage) GetFindTransactionsByAddressResponse() *FindTransactionsByAddressResponse {
	if x, ok := m.GetMsg().(*WrapperMessage_FindTransactionsByAddressResponse); ok {
		return x.FindTransactionsByAddressResponse
	}
	return nil
}

func (m *WrapperMessage) GetFindTransactionsByTagResponse() *FindTransactionsByTagResponse {
	if x, ok := m.GetMsg().(*WrapperMessage_FindTransactionsByTagResponse); ok {
		return x.FindTransactionsByTagResponse
	}
	return nil
}

func (m *WrapperMessage) GetFindTransactionByHashResponse() *FindTransactionByHashResponse {
	if x, ok := m.GetMsg().(*WrapperMessage_FindTransactionByHashResponse); ok {
		return x.FindTransactionByHashResponse
	}
	return nil
}

func (m *WrapperMessage) GetPollEffectResponse() *PollEffectResponse {
	if x, ok := m.GetMsg().(*WrapperMessage_PollEffectResponse); ok {
		return x.PollEffectResponse
	}
	return nil
}

func (m *WrapperMessage) GetTakeEffectResponse() *TakeEffectResponse {
	if x, ok := m.GetMsg().(*WrapperMessage_TakeEffectResponse); ok {
		return x.TakeEffectResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WrapperMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WrapperMessage_FindTransactionsByAddressRequest)(nil),
		(*WrapperMessage_FindTransactionsByTagRequest)(nil),
		(*WrapperMessage_FindTransactionByHashRequest)(nil),
		(*WrapperMessage_SubmitTransactionBuilderRequest)(nil),
		(*WrapperMessage_SubmitTransactionBytesRequest)(nil),
		(*WrapperMessage_AddEffectListenerRequest)(nil),
		(*WrapperMessage_RemoveEffectListenerRequest)(nil),
		(*WrapperMessage_SubmitEffectRequest)(nil),
		(*WrapperMessage_PollEffectRequest)(nil),
		(*WrapperMessage_TakeEffectRequest)(nil),
		(*WrapperMessage_FindTransactionsByAddressResponse)(nil),
		(*WrapperMessage_FindTransactionsByTagResponse)(nil),
		(*WrapperMessage_FindTransactionByHashResponse)(nil),
		(*WrapperMessage_PollEffectResponse)(nil),
		(*WrapperMessage_TakeEffectResponse)(nil),
	}
}

func init() {
	proto.RegisterEnum("WrapperMessage_MessageType", WrapperMessage_MessageType_name, WrapperMessage_MessageType_value)
	proto.RegisterType((*WrapperMessage)(nil), "WrapperMessage")
}

func init() { proto.RegisterFile("wrapper.proto", fileDescriptor_7c170ee080c90dfc) }

var fileDescriptor_7c170ee080c90dfc = []byte{
	// 653 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x95, 0xcb, 0x72, 0xda, 0x3c,
	0x18, 0x86, 0x4d, 0xce, 0xf9, 0x08, 0x24, 0xbf, 0x92, 0x7f, 0x4a, 0x9a, 0x13, 0x61, 0x92, 0x4e,
	0xba, 0xf1, 0x22, 0x5d, 0x77, 0x61, 0x82, 0xa8, 0x98, 0x72, 0x48, 0x65, 0xa5, 0x99, 0xac, 0xa8,
	0x13, 0x44, 0xca, 0x14, 0x30, 0xb5, 0x4c, 0x3b, 0xdc, 0x45, 0x6f, 0xaf, 0x77, 0xd3, 0xb1, 0x2d,
	0xc0, 0xc2, 0xc2, 0xec, 0xf0, 0xbc, 0x8f, 0x9e, 0x57, 0xd6, 0xc1, 0x40, 0xee, 0xb7, 0xe7, 0x8c,
	0x46, 0xdc, 0x33, 0x47, 0x9e, 0xeb, 0xbb, 0x6f, 0x73, 0x1e, 0xff, 0x39, 0xe6, 0xc2, 0x97, 0x8f,
	0x79, 0x8f, 0x8b, 0x91, 0x3b, 0x14, 0x3c, 0x7a, 0x2e, 0xfd, 0xdd, 0x87, 0xfc, 0x63, 0x34, 0xa0,
	0xc1, 0x85, 0x70, 0x5e, 0x39, 0xfa, 0x08, 0xd9, 0x41, 0xf4, 0x93, 0x4d, 0x46, 0xbc, 0x90, 0x29,
	0x66, 0x6e, 0xf2, 0xb7, 0x27, 0xa6, 0x4a, 0x99, 0x8d, 0x39, 0x42, 0xe3, 0x3c, 0x72, 0xa1, 0xd8,
	0xed, 0x0d, 0x3b, 0xcc, 0x73, 0x86, 0xc2, 0x79, 0xf1, 0x7b, 0xee, 0x50, 0x94, 0x27, 0x56, 0xa7,
	0xe3, 0x71, 0x21, 0x68, 0x34, 0x97, 0xc2, 0x5a, 0x31, 0x73, 0x93, 0xbd, 0xbd, 0x34, 0xab, 0x2b,
	0x40, 0x62, 0xd0, 0x95, 0x32, 0xf4, 0x02, 0xa7, 0x49, 0x86, 0x39, 0xaf, 0xd3, 0xb2, 0xf5, 0xb0,
	0xec, 0x4c, 0x53, 0x36, 0x87, 0x88, 0x41, 0x53, 0x25, 0x9a, 0x92, 0xf2, 0x84, 0x38, 0xe2, 0xfb,
	0xb4, 0x64, 0x43, 0x5f, 0xa2, 0x40, 0x9a, 0x12, 0x25, 0x47, 0x7d, 0xb8, 0x10, 0xe3, 0xe7, 0x41,
	0xcf, 0x8f, 0x13, 0xe3, 0x5e, 0xbf, 0xc3, 0xbd, 0x69, 0xcf, 0x66, 0xd8, 0x53, 0x34, 0xed, 0x74,
	0x8e, 0x18, 0x74, 0x95, 0x0a, 0x75, 0xe1, 0x2c, 0x89, 0x4c, 0x7c, 0x3e, 0xdb, 0xa5, 0xad, 0xb0,
	0xeb, 0x5c, 0xd3, 0x15, 0xa3, 0x88, 0x41, 0xd3, 0x35, 0xe8, 0x11, 0x0a, 0x4e, 0xa7, 0x83, 0xbb,
	0x5d, 0xfe, 0xe2, 0xd7, 0x7b, 0xc2, 0xe7, 0xc3, 0xf9, 0xeb, 0x6c, 0x87, 0x15, 0xc7, 0xa6, 0xb5,
	0x04, 0x20, 0x06, 0x5d, 0x3a, 0x18, 0x7d, 0x83, 0x13, 0x8f, 0x0f, 0xdc, 0x5f, 0x5c, 0xef, 0xde,
	0x09, 0xdd, 0xa7, 0x26, 0x5d, 0xce, 0x10, 0x83, 0xa6, 0x29, 0x10, 0x81, 0xc3, 0xe8, 0xdd, 0xa2,
	0x78, 0x6a, 0xde, 0x0d, 0xcd, 0x47, 0x72, 0x61, 0x94, 0x8c, 0x18, 0x54, 0x37, 0x04, 0x95, 0xe1,
	0xbf, 0x91, 0xdb, 0xef, 0xab, 0x1e, 0x08, 0x3d, 0xc8, 0xbc, 0x5f, 0x4c, 0x88, 0x41, 0x93, 0x78,
	0xe0, 0xf0, 0x9d, 0x1f, 0x5c, 0x75, 0x64, 0xa5, 0x83, 0x2d, 0x26, 0x81, 0x23, 0x81, 0x23, 0x0f,
	0x2e, 0x53, 0x2e, 0x54, 0xf4, 0x69, 0x28, 0xec, 0x85, 0xce, 0x52, 0xda, 0xf5, 0x8c, 0x48, 0x62,
	0xd0, 0xd5, 0xba, 0xe0, 0xa0, 0x2d, 0xb9, 0x5b, 0xb2, 0x2f, 0x27, 0x0f, 0x5a, 0x35, 0x8d, 0x0a,
	0x0e, 0x5a, 0xaa, 0x46, 0xd3, 0x33, 0xbd, 0x5e, 0xb2, 0x27, 0xaf, 0xef, 0x51, 0x29, 0x4d, 0x8f,
	0x0a, 0x20, 0x0c, 0x28, 0xbe, 0x39, 0x52, 0xbe, 0x1f, 0xca, 0x0f, 0x95, 0xcd, 0x9c, 0x19, 0x35,
	0x03, 0x02, 0x4d, 0x7c, 0x7f, 0xa4, 0xe6, 0x40, 0x6a, 0x58, 0x22, 0x0a, 0x34, 0xc9, 0x01, 0xa5,
	0x3f, 0x1b, 0x90, 0x8d, 0x7d, 0x8c, 0xd1, 0x0d, 0x5c, 0x55, 0x6b, 0xcd, 0x4a, 0x9b, 0x51, 0xab,
	0x69, 0x5b, 0x77, 0xac, 0xd6, 0x6a, 0xda, 0xed, 0xf2, 0x53, 0xdb, 0xaa, 0x54, 0x28, 0xb6, 0xed,
	0x36, 0xc5, 0x5f, 0x1e, 0xb0, 0xcd, 0x0e, 0x0c, 0x74, 0x05, 0x45, 0x2d, 0xc9, 0xac, 0x4f, 0x33,
	0x2a, 0xa3, 0xa3, 0x02, 0x88, 0x58, 0x36, 0x99, 0x51, 0x6b, 0xe8, 0x1d, 0x94, 0xec, 0x87, 0x72,
	0xa3, 0xc6, 0x54, 0xee, 0xa1, 0x56, 0xaf, 0x60, 0x3a, 0xe3, 0xd6, 0x03, 0x9b, 0x8e, 0x7b, 0x62,
	0x78, 0x3e, 0xb3, 0x0d, 0x74, 0x01, 0x27, 0x56, 0xa5, 0xd2, 0xc6, 0xd5, 0x2a, 0xbe, 0x63, 0xed,
	0x7a, 0xcd, 0x66, 0xb8, 0x19, 0xd3, 0x6c, 0xa2, 0x12, 0x9c, 0x53, 0xdc, 0x68, 0x7d, 0xc5, 0x4b,
	0x99, 0x2d, 0x74, 0x0c, 0xff, 0xcb, 0x2a, 0xc9, 0x4c, 0xa3, 0x6d, 0xf4, 0x06, 0x0e, 0xef, 0x5b,
	0xf5, 0xfa, 0x62, 0xb0, 0x13, 0x04, 0xcc, 0xfa, 0x8c, 0x17, 0x83, 0x5d, 0xf4, 0x1e, 0xae, 0x57,
	0xac, 0xaa, 0x7d, 0xdf, 0x6a, 0xda, 0xf8, 0x00, 0xd0, 0x35, 0x5c, 0xa6, 0x2c, 0xab, 0xc4, 0xb2,
	0x3a, 0x2c, 0xb6, 0xae, 0x12, 0xdb, 0x43, 0x05, 0x38, 0x52, 0xa7, 0x2a, 0x93, 0x5c, 0x90, 0xa8,
	0x73, 0x95, 0x49, 0xbe, 0xbc, 0x09, 0xeb, 0x03, 0xf1, 0xfa, 0xbc, 0x15, 0xfe, 0xc5, 0x7f, 0xf8,
	0x17, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x38, 0x80, 0x29, 0x12, 0x08, 0x00, 0x00,
}
